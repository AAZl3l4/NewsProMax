server:
  port: 8003

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.188.188:3306/NewsProMax?useSSL=false&serverTimezone=UTC
    username: root
    password: root
  application:
    name: ws-serve
  cloud:
    nacos:
      discovery: #注册中心相关配置
        server-addr: 192.168.188.188:8848 #默认是本地的8848(可在nacos.直接同时设置注册中心和配置中心的地址)
        cluster-name: default-cluster #可通过配置负载均衡器 实现优先选择同一集群的服务(NacosLoadBalancer)
        namespace: public #在控制台新建 用于环境隔离 不同namespace下的服务不可见
        ephemeral: true #设置为非临时实例
    sentinel:
      transport:
        dashboard: http://192.168.188.188:8858 # 设置Sentinel控制台的地址和端口
        port: 8719               # 设置与Sentinel控制台通信的端口，默认为8719
      http-method-specify: true # 开启请求方式前缀
      web-context-unify: false   # 关闭上下文聚合
  data:
    redis:
      host: 192.168.188.188
      port: 6379
  # 配置MQ
  rabbitmq:
    host: 192.168.188.188 #主机地址
    port: 5672 #端口
    virtual-host: / #虚拟主机 确保不同的应用消息队列能够安全独立运行 一般一个用户一个虚拟主机 不在该虚拟主机的用户没有操作权限
    username: admin #用户名
    password: admin #密码
    listener:
      simple:
        prefetch: 1 #每次只能获取一条消息 处理完成才能获取下一个
    publisher-confirm-type: correlated # 异步 confirm 回调
    publisher-returns: true # 开启 return 机制
    template:
      mandatory: true # 路由失败时触发 ReturnCallback


# 配置远程调用
feign:
  sentinel:
    enabled: true
  client:
    config:
      default:
        loggerLevel: info # 日志级别
  httpclient:
    enabled: true # 开启 Feign 对 HttpClient 的支持
    max-connections: 200 # 最大的连接数
    max-connections-per-route: 50 # 每个路径的最大连接数
    
# 驼峰命名开关
mybatis:
  map-underscore-to-camel-case: true

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.AAZl3l4.NettyWSService
knife4j:
  enable: true
  setting:
    language: zh_cn

# 日志配置
logging:
  config: classpath:logback-spring.xml

seata:
  registry: #配置TC服务注册中心的配置 微服务根据这些信息去注册中心获取tc服务地址
    # 参考tc服务的registry.conf中的配置
    # 包括: 地址 namespace group application-name cluster
    type: nacos #指定注册中心类型
    nacos: #nacos配置
      server-addr: 192.168.188.188:8848
      namespace: "" #命名空间 空就是默认 即public
      group: SEATA_GROUP #默认分组
      application: seata-server #tc服务在nacos中的服务名称
  tx-service-group: seata #事务组 根据这个获取tc服务的cluster名称
  service:
    vgroup-mapping: #事务组与TC服务cluster的映射关系
      seata:  default #集群名
  data-source-proxy-mode: AT #开启指定的数据源代理模式 默认AT